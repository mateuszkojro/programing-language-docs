var searchData=
[
  ['catch_5fconfig_5fmain_11',['CATCH_CONFIG_MAIN',['../_test_main_8cc.html#a656eb5868e824d59f489f910db438420',1,'TestMain.cc']]],
  ['clone_12',['clone',['../class_bind_def.html#a241110d236cf3358905e10f2055bea34',1,'BindDef::clone()'],['../class_binding_usage.html#a8b8c203b964727e76865cae649b32965',1,'BindingUsage::clone()'],['../class_block.html#aae0fb5718b742535e617f075d7bde337',1,'Block::clone()'],['../class_conditional.html#a59e8ab1ce417569caa69d5ddda2a1086',1,'Conditional::clone()'],['../class_error_statment.html#a6cd9ef39c57531ac9b29f419555a0c61',1,'ErrorStatment::clone()'],['../class_i_expr.html#a61cf48235f42e17560412bc4abfee5dc',1,'IExpr::clone()'],['../class_expr_number.html#a3855f5845a363a1dd2fbbda586b6f464',1,'ExprNumber::clone()'],['../class_expr_operation.html#aa4541ea3cfaef73c3e7c69bfa08c2d29',1,'ExprOperation::clone()'],['../class_expr_variable.html#a203c140a7aaedf1af439e7c397cd914d',1,'ExprVariable::clone()'],['../class_func_call.html#a378f53203277f9bb0031dbcce9908d70',1,'FuncCall::clone()'],['../class_func_def.html#aca7e985ea94ca54ce39c09851423514c',1,'FuncDef::clone()'],['../class_i_statment.html#a9f6422cbe601954df27175ca0ae7bf4e',1,'IStatment::clone()'],['../class_i_value.html#a66be266eb2dca654faa0d12072a168a4',1,'IValue::clone()'],['../class_loop.html#ab77a9791ce35dab4cda242f6d087315c',1,'Loop::clone()'],['../class_null.html#af0d887ca06ad72b4811d71b2bec2f018',1,'Null::clone()'],['../class_number.html#a09d9c304b323353a99a2b318670cf3ca',1,'Number::clone()']]],
  ['cmake_5fminimum_5frequired_13',['cmake_minimum_required',['../_c_make_lists_8txt.html#a8134e184a3f5d5848091954ebbaaa109',1,'cmake_minimum_required(VERSION 3.0.0) project(interpreter VERSION 0.1.0) include(CTest) enable_testing() set(CMAKE_CXX_STANDARD 17) set(CMAKE_CXX_STANDARD_REQUIRED ON) add_subdirectory(language/) add_executable(interpreter interpreter.cc) target_link_libraries(interpreter parser) set(CPACK_PROJECT_NAME $:&#160;CMakeLists.txt'],['../language_2_c_make_lists_8txt.html#a74730da64619203a5f7fbcdd0bd9602a',1,'cmake_minimum_required(VERSION 3.0.0) project(language VERSION 0.1.0) if(CMAKE_CXX_COMPILER_ID STREQUAL &quot;Clang&quot;) message(&quot;Using Clang additional compiler options enabled&quot;) set(FORCE_COLORED_OUTPUT true) elseif(CMAKE_CXX_COMPILER_ID STREQUAL &quot;GNU&quot;) set(FORCE_COLORED_OUTPUT true) elseif(CMAKE_CXX_COMPILER_ID STREQUAL &quot;Intel&quot;) elseif(CMAKE_CXX_COMPILER_ID STREQUAL &quot;MSVC&quot;) endif() option(FORCE_COLORED_OUTPUT &quot;Always produce ANSI-colored output (GNU/Clang only).&quot; FALSE) if($:&#160;CMakeLists.txt']]],
  ['cmakelists_2etxt_14',['CMakeLists.txt',['../_c_make_lists_8txt.html',1,'(Global Namespace)'],['../language_2_c_make_lists_8txt.html',1,'(Global Namespace)']]],
  ['compiler_15',['COMPILER',['../utils_8h.html#a63f2e19ce36089fbdd99a7a46c62afbe',1,'utils.h']]],
  ['conditional_16',['Conditional',['../class_conditional.html',1,'Conditional'],['../class_conditional.html#a2dcba87eeecbfd480537ddecab87f80c',1,'Conditional::Conditional(IStatment *condition, Block *true_Case, Block *false_case)'],['../class_conditional.html#ae008134c3649582343eaabbac43b2fca',1,'Conditional::Conditional(const Conditional &amp;other)']]],
  ['conditional_2ecc_17',['Conditional.cc',['../_conditional_8cc.html',1,'']]],
  ['conditional_2eh_18',['Conditional.h',['../_conditional_8h.html',1,'']]]
];
